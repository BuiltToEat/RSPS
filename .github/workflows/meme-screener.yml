name: Meme Screener Daily

on:
  schedule:
    # 00:05 UTC = 11:05 AM Australia/Sydney during DST
    - cron: '05 00 * * *'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: meme-screener-daily
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TZ: Australia/Sydney
      # set this secret in: Settings → Secrets and variables → Actions → New repository secret
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      # optional: slow requests a touch to avoid 429s on first full-history pull
      CG_DELAY_S: "1.8"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade requests pandas numpy matplotlib pyarrow fastparquet

      # Optional: verify the key is present (won't print it)
      - name: Sanity check env
        run: |
          test -n "$COINGECKO_API_KEY" || (echo "COINGECKO_API_KEY is missing"; exit 1)
          python - << 'PY'
          import os; print("CG_DELAY_S =", os.getenv("CG_DELAY_S","(default)"))
          PY

      - name: Run screener
        run: python "ALT LEAGUE"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: meme-screener
          path: |
            meme_screener_daily.html
            meme_screener_daily.csv
            meme_screener_table.png
            meme_rsps_backtest.png
          if-no-files-found: warn

      # --- Optional: post images to Discord (uncomment + add secret DISCORD_WEBHOOK) ---
      # - name: Post to Discord
      #   if: always()
      #   env:
      #     DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
      #   run: |
      #     python - << 'PY'
      #     import os, requests
      #     wh = os.getenv("DISCORD_WEBHOOK")
      #     for fn in ["meme_screener_table.png", "meme_rsps_backtest.png"]:
      #         if not os.path.exists(fn): continue
      #         with open(fn, "rb") as f:
      #             requests.post(wh, files={"file": (fn, f, "image/png")})
      #     PY
















