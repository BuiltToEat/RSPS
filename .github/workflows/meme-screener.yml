name: Meme Screener — 2 screenshots daily

on:
  schedule:
    - cron: "0 0 * * *"        # 00:00 UTC every day (UTC close)
  workflow_dispatch: {}        # Manual Run button

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      TZ: Australia/Sydney
      MPLBACKEND: Agg
      # Hard-wired creds (move to repo Secrets later if you like)
      CRYPTOCOMPARE_API_KEY: d5ddb7a7f49de4d4a8af07e98e0ebf437e7acc8bb282f12af978320486f741e7
      DISCORD_WEBHOOK_URL: https://discord.com/api/webhooks/1429701285975949322/fS0y9EkVQtnP15CJkAQEHEdpgL5Hlk43-Ct4D9uyZjjJT2jbk9nPkETT5cbbGGDyPVqD

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install numpy pandas requests matplotlib
          fi
          # Needed by pandas Styler (HTML)
          pip install "jinja2>=3.1,<4"

      - name: Run screener (ALT LEAGUE, no extension)
        run: |
          echo "Sydney: $(date)"
          python "ALT LEAGUE"

      - name: Gather outputs
        run: |
          set -e
          mkdir -p out
          cp -f meme_screener_daily.html out/ || true
          cp -f meme_screener_daily.csv  out/ || true
          cp -f meme_rsps_backtest.png   out/ || true
          # If your script used different names, grab them too:
          shopt -s nullglob
          for f in *backtest*.png; do cp -f "$f" out/; done
          echo "Root files:"; ls -lah
          echo "out files:"; ls -lah out

      # --- Make a PNG of the HTML table (no Python, just wkhtmltoimage) ---
      - name: Install wkhtmltoimage
        run: |
          sudo apt-get update
          sudo apt-get install -y wkhtmltopdf
          wkhtmltoimage --version || true

      - name: Screenshot table → out/table.png
        run: |
          if [ -f out/meme_screener_daily.html ]; then
            wkhtmltoimage --width 1800 --quality 95 \
              out/meme_screener_daily.html out/table.png || true
          fi
          ls -lah out || true

      - name: Normalize backtest name (→ out/backtest.png)
        run: |
          if [ -f out/meme_rsps_backtest.png ]; then
            mv -f out/meme_rsps_backtest.png out/backtest.png
          elif ls out/*backtest*.png 1>/dev/null 2>&1; then
            mv -f "$(ls out/*backtest*.png | head -n1)" out/backtest.png
          fi
          ls -lah out || true

      - name: Post to Discord (exactly 2 screenshots + csv if exists)
        run: |
          SYD_DATE="$(date +%Y-%m-%d)"
          # Base message so you always see something
          curl -sS -H "Content-Type: application/json" \
               -X POST "$DISCORD_WEBHOOK_URL" \
               -d "{\"content\":\"Meme Screener — ${SYD_DATE}\\nTable + equity curve.\"}" >/dev/null

          # If table.png didn't render, attach the HTML instead so you still see the table
          declare -a args
          if [ -f out/table.png ]; then
            args+=(-F "file1=@out/table.png;type=image/png;filename=table-${SYD_DATE}.png")
          elif [ -f out/meme_screener_daily.html ]; then
            args+=(-F "file1=@out/meme_screener_daily.html;type=text/html;filename=table-${SYD_DATE}.html")
          fi

          [ -f out/backtest.png ] && args+=(-F "file2=@out/backtest.png;type=image/png;filename=backtest-${SYD_DATE}.png")
          [ -f out/meme_screener_daily.csv ] && args+=(-F "file3=@out/meme_screener_daily.csv;type=text/csv;filename=screener-${SYD_DATE}.csv")

          if [ ${#args[@]} -gt 0 ]; then
            curl -sS -X POST "$DISCORD_WEBHOOK_URL" \
                 -F "payload_json={\"content\":\"Attachments for ${SYD_DATE}\"}" \
                 "${args[@]}" >/dev/null
          fi

      - name: Upload artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: meme-screener-${{ github.run_id }}
          path: out/








